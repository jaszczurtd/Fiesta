Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                              adc.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

MEM                 0x4               i2cEeprom.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
LOAD main.o
LOAD adc.o
LOAD i2cEeprom.o
LOAD twi_i2c.o
LOAD UART.o
LOAD utils.o
LOAD pcf8574a.o
LOAD pwm.o
LOAD /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libm.a
LOAD /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libc.a
LOAD /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x49c
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x10 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000070        0x8 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x0000000000000078        0x4 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000078                __vector_20
                0x0000000000000078                __vector_12
                0x0000000000000078                __bad_interrupt
                0x0000000000000078                __vector_6
                0x0000000000000078                __vector_3
                0x0000000000000078                __vector_11
                0x0000000000000078                __vector_13
                0x0000000000000078                __vector_17
                0x0000000000000078                __vector_19
                0x0000000000000078                __vector_7
                0x0000000000000078                __vector_5
                0x0000000000000078                __vector_4
                0x0000000000000078                __vector_9
                0x0000000000000078                __vector_2
                0x0000000000000078                __vector_15
                0x0000000000000078                __vector_8
                0x0000000000000078                __vector_14
                0x0000000000000078                __vector_10
                0x0000000000000078                __vector_18
                0x0000000000000078                __vector_1
 .text          0x000000000000007c       0x30 main.o
                0x000000000000007c                setup
 .text          0x00000000000000ac       0x5a adc.o
                0x00000000000000ac                ADC_Init
                0x00000000000000ce                getADCValue
                0x00000000000000f0                __vector_16
 .text          0x0000000000000106      0x160 i2cEeprom.o
                0x0000000000000106                EEPROM_start
                0x0000000000000132                EEPROMwrite
                0x000000000000017e                EEPROMread
                0x00000000000001bc                setStoreStatusFlag
                0x00000000000001c2                storeStatusToEEPROM
                0x0000000000000240                restoreStatusFromEEPROM
 .text          0x0000000000000266       0x48 twi_i2c.o
                0x0000000000000266                TWI_Init
                0x0000000000000272                TWI_Start
                0x000000000000027e                TWI_Stop
                0x000000000000028a                TWI_Read
                0x00000000000002a0                TWI_Write
 .text          0x00000000000002ae       0x22 UART.o
                0x00000000000002ae                UART_Init
                0x00000000000002c0                UART_Receive
                0x00000000000002c8                UART_Sent
 .text          0x00000000000002d0      0x100 utils.o
                0x00000000000002d0                delay_ms
                0x00000000000002ec                binatoi
                0x000000000000032c                decToBinary
                0x000000000000037a                BinToBCD
                0x00000000000003a0                reverse
 .text          0x00000000000003d0       0x3a pcf8574a.o
                0x00000000000003d0                pcf8574writeByte
                0x0000000000000402                clearPorts
 .text          0x000000000000040a       0x6c pwm.o
                0x000000000000040a                PWM_Init
                0x0000000000000426                PWM_Increase
                0x0000000000000448                PWM_Decrease
                0x000000000000046c                PWM_SetValue
 .text          0x0000000000000476        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000476        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000476                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000476       0x22 main.o
                0x0000000000000476                main
 .text.libgcc.mul
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000498                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000498        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                0x0000000000000498                exit
                0x0000000000000498                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000498        0x4 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x000000000000049c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x000000000000049c                _etext = .

.data           0x0000000000800060        0x0 load address 0x000000000000049c
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 adc.o
 .data          0x0000000000800060        0x0 i2cEeprom.o
 .data          0x0000000000800060        0x0 twi_i2c.o
 .data          0x0000000000800060        0x0 UART.o
 .data          0x0000000000800060        0x0 utils.o
 .data          0x0000000000800060        0x0 pcf8574a.o
 .data          0x0000000000800060        0x0 pwm.o
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800060       0x1b
                0x0000000000800060                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800060        0x0 main.o
 .bss           0x0000000000800060        0x3 adc.o
 .bss           0x0000000000800063        0x3 i2cEeprom.o
 .bss           0x0000000000800066        0x0 twi_i2c.o
 .bss           0x0000000000800066        0x0 UART.o
 .bss           0x0000000000800066       0x11 utils.o
 .bss           0x0000000000800077        0x0 pcf8574a.o
 .bss           0x0000000000800077        0x0 pwm.o
 .bss           0x0000000000800077        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800077        0x0 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800077        0x4 i2cEeprom.o
                0x0000000000800077                MEM
                0x000000000080007b                PROVIDE (__bss_end = .)
                0x000000000000049c                __data_load_start = LOADADDR (.data)
                0x000000000000049c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080007b        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080007b                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 adc.o
 .comment       0x0000000000000011       0x12 i2cEeprom.o
 .comment       0x0000000000000011       0x12 twi_i2c.o
 .comment       0x0000000000000011       0x12 UART.o
 .comment       0x0000000000000011       0x12 utils.o
 .comment       0x0000000000000011       0x12 pcf8574a.o
 .comment       0x0000000000000011       0x12 pwm.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x148
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 adc.o
 .debug_aranges
                0x0000000000000048       0x20 i2cEeprom.o
 .debug_aranges
                0x0000000000000068       0x20 twi_i2c.o
 .debug_aranges
                0x0000000000000088       0x20 UART.o
 .debug_aranges
                0x00000000000000a8       0x20 utils.o
 .debug_aranges
                0x00000000000000c8       0x20 pcf8574a.o
 .debug_aranges
                0x00000000000000e8       0x20 pwm.o
 .debug_aranges
                0x0000000000000108       0x20 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000128       0x20 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1b35
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_info    0x00000000000004e6      0x395 main.o
 .debug_info    0x000000000000087b      0x1cf adc.o
 .debug_info    0x0000000000000a4a      0x525 i2cEeprom.o
 .debug_info    0x0000000000000f6f      0x1df twi_i2c.o
 .debug_info    0x000000000000114e      0x1b1 UART.o
 .debug_info    0x00000000000012ff      0x34d utils.o
 .debug_info    0x000000000000164c      0x234 pcf8574a.o
 .debug_info    0x0000000000001880      0x269 pwm.o
 .debug_info    0x0000000000001ae9       0x26 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_info    0x0000000000001b0f       0x26 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000     0x1161
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_abbrev  0x00000000000004a3      0x205 main.o
 .debug_abbrev  0x00000000000006a8      0x143 adc.o
 .debug_abbrev  0x00000000000007eb      0x269 i2cEeprom.o
 .debug_abbrev  0x0000000000000a54      0x14d twi_i2c.o
 .debug_abbrev  0x0000000000000ba1      0x148 UART.o
 .debug_abbrev  0x0000000000000ce9      0x1bf utils.o
 .debug_abbrev  0x0000000000000ea8      0x154 pcf8574a.o
 .debug_abbrev  0x0000000000000ffc      0x13d pwm.o
 .debug_abbrev  0x0000000000001139       0x14 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x000000000000114d       0x14 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000     0x13af
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_line    0x000000000000001d      0x299 main.o
 .debug_line    0x00000000000002b6      0x18c adc.o
 .debug_line    0x0000000000000442      0x435 i2cEeprom.o
 .debug_line    0x0000000000000877      0x1fe twi_i2c.o
 .debug_line    0x0000000000000a75      0x141 UART.o
 .debug_line    0x0000000000000bb6      0x3a0 utils.o
 .debug_line    0x0000000000000f56      0x10b pcf8574a.o
 .debug_line    0x0000000000001061      0x268 pwm.o
 .debug_line    0x00000000000012c9       0x61 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_line    0x000000000000132a       0x85 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_frame    0x0000000000000000      0x2d8
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x34 main.o
 .debug_frame   0x0000000000000034       0x4c adc.o
 .debug_frame   0x0000000000000080       0xb8 i2cEeprom.o
 .debug_frame   0x0000000000000138       0x64 twi_i2c.o
 .debug_frame   0x000000000000019c       0x44 UART.o
 .debug_frame   0x00000000000001e0       0x64 utils.o
 .debug_frame   0x0000000000000244       0x40 pcf8574a.o
 .debug_frame   0x0000000000000284       0x54 pwm.o

.debug_str      0x0000000000000000      0x5e6
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_str     0x0000000000000196      0x227 main.o
                                        0x260 (size before relaxing)
 .debug_str     0x00000000000003bd       0x3a adc.o
                                        0x18c (size before relaxing)
 .debug_str     0x00000000000003f7       0x97 i2cEeprom.o
                                        0x259 (size before relaxing)
 .debug_str     0x000000000000048e        0xf twi_i2c.o
                                        0x178 (size before relaxing)
 .debug_str     0x000000000000049d       0x2f UART.o
                                        0x16e (size before relaxing)
 .debug_str     0x00000000000004cc       0x37 utils.o
                                        0x1c5 (size before relaxing)
 .debug_str     0x0000000000000503       0x24 pcf8574a.o
                                        0x18c (size before relaxing)
 .debug_str     0x0000000000000527       0x3f pwm.o
                                        0x18e (size before relaxing)
 .debug_str     0x0000000000000566       0x80 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .debug_str     0x00000000000005e6       0x80 /usr/local/Cellar/avr-gcc/9.2.0/lib/avr-gcc/9/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)

.debug_loc      0x0000000000000000      0x7f3
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x64 main.o
 .debug_loc     0x0000000000000064      0x2ac i2cEeprom.o
 .debug_loc     0x0000000000000310       0x75 twi_i2c.o
 .debug_loc     0x0000000000000385       0x15 UART.o
 .debug_loc     0x000000000000039a      0x34c utils.o
 .debug_loc     0x00000000000006e6       0x9e pcf8574a.o
 .debug_loc     0x0000000000000784       0x6f pwm.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x30
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o
 .debug_ranges  0x0000000000000018       0x18 i2cEeprom.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
